<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mss.framework.base.user.server.dao.SSOAccessTokenMapper">
    <resultMap id="BaseResultMap" type="com.mss.framework.base.user.server.pojo.SSOAccessToken">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="access_token" jdbcType="VARCHAR" property="accessToken"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="client_id" jdbcType="VARCHAR" property="clientId"/>
        <result column="expires_in" jdbcType="BIGINT" property="expiresIn"/>
        <result column="user_ip" jdbcType="VARCHAR" property="userIp"/>
        <result column="channel" jdbcType="VARCHAR" property="channel"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,access_token,user_id,user_name,client_id,expires_in,user_ip,channel,create_user,update_user,create_time,update_time,
    </sql>
    <select id="selectByPrimaryKey" parameterType="String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from sso_access_token
        where id = #{id, jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="String">
        delete from sso_access_token
        where id = #{id, jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.mss.framework.base.user.server.pojo.SSOAccessToken">
        insert into sso_access_token
        (id, access_token, user_id, user_name, client_id, expires_in, user_ip, channel, create_user, update_user, create_time, update_time, )
        values
        (#{id, jdbcType=VARCHAR}, #{accessToken, jdbcType=VARCHAR}, #{userId, jdbcType=VARCHAR}, #{userName, jdbcType=VARCHAR}, #{clientId, jdbcType=VARCHAR}, #{expiresIn, jdbcType=BIGINT}, #{userIp, jdbcType=VARCHAR}, #{channel, jdbcType=VARCHAR}, #{createUser, jdbcType=VARCHAR}, #{updateUser, jdbcType=VARCHAR}, #{createTime, jdbcType=TIMESTAMP}, #{updateTime, jdbcType=TIMESTAMP}, )
    </insert>
    <insert id="insertSelective" parameterType="com.mss.framework.base.user.server.pojo.SSOAccessToken">
        insert into sso_access_token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="accessToken != null">
                access_token,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="clientId != null">
                client_id,
            </if>
            <if test="expiresIn != null">
                expires_in,
            </if>
            <if test="userIp != null">
                user_ip,
            </if>
            <if test="channel != null">
                channel,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id, jdbcType=VARCHAR},
            </if>
            <if test="accessToken != null">
                #{accessToken, jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId, jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName, jdbcType=VARCHAR},
            </if>
            <if test="clientId != null">
                #{clientId, jdbcType=VARCHAR},
            </if>
            <if test="expiresIn != null">
                #{expiresIn, jdbcType=BIGINT},
            </if>
            <if test="userIp != null">
                #{userIp, jdbcType=VARCHAR},
            </if>
            <if test="channel != null">
                #{channel, jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                #{createUser, jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                #{updateUser, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mss.framework.base.user.server.pojo.SSOAccessToken">
        update sso_access_token
        <set>
            <if test="id != null">
                id = #{id, jdbcType=VARCHAR},
            </if>
            <if test="accessToken != null">
                access_token = #{accessToken, jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId, jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName, jdbcType=VARCHAR},
            </if>
            <if test="clientId != null">
                client_id = #{clientId, jdbcType=VARCHAR},
            </if>
            <if test="expiresIn != null">
                expires_in = #{expiresIn, jdbcType=BIGINT},
            </if>
            <if test="userIp != null">
                user_ip = #{userIp, jdbcType=VARCHAR},
            </if>
            <if test="channel != null">
                channel = #{channel, jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser, jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id, jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mss.framework.base.user.server.pojo.SSOAccessToken">
        update sso_access_token
        set
            id = #{id, jdbcType=VARCHAR},
            access_token = #{accessToken, jdbcType=VARCHAR},
            user_id = #{userId, jdbcType=VARCHAR},
            user_name = #{userName, jdbcType=VARCHAR},
            client_id = #{clientId, jdbcType=VARCHAR},
            expires_in = #{expiresIn, jdbcType=BIGINT},
            user_ip = #{userIp, jdbcType=VARCHAR},
            channel = #{channel, jdbcType=VARCHAR},
            create_user = #{createUser, jdbcType=VARCHAR},
            update_user = #{updateUser, jdbcType=VARCHAR},
            create_time = #{createTime, jdbcType=TIMESTAMP},
            update_time = #{updateTime, jdbcType=TIMESTAMP},
        where id = #{id, jdbcType=VARCHAR}
    </update>
    <delete id="deleteByIdList" parameterType="map">
        delete from sso_access_token
        where id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")" >
            #{id}
        </foreach>
    </delete>
    <select id="selectPageList" parameterType="com.mss.framework.base.user.server.pojo.SSOAccessToken" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from sso_access_token
        <where>
            <if test="id != null">
                and id like #{id}
            </if>
            <if test="accessToken != null">
                and access_token like #{accessToken}
            </if>
            <if test="userId != null">
                and user_id like #{userId}
            </if>
            <if test="userName != null">
                and user_name like #{userName}
            </if>
            <if test="clientId != null">
                and client_id like #{clientId}
            </if>
            <if test="expiresIn != null">
                and expires_in like #{expiresIn}
            </if>
            <if test="userIp != null">
                and user_ip like #{userIp}
            </if>
            <if test="channel != null">
                and channel like #{channel}
            </if>
            <if test="createUser != null">
                and create_user like #{createUser}
            </if>
            <if test="updateUser != null">
                and update_user like #{updateUser}
            </if>
            <if test="createTime != null">
                and create_time like #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time like #{updateTime}
            </if>
        </where>
    </select>

    <select id="selectByAccessToken" parameterType="string" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from sso_access_token
        where access_token = #{accessToken}
    </select>

    <select id="selectByUserIdClientId" parameterType="map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from sso_access_token
        where user_id = #{userId}
        and client_id = #{clientId}
    </select>
</mapper>
